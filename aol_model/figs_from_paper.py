import matplotlib.pyplot as plt
import aod_model_expt_comparison as c
import aod_visualisation as a
import aol_model.pointing_efficiency as p

# fig_1 is not generated by the model

def plot_fig_2():
    plt.figure()
    c.plot_eff_ang_wide()
    plt.figure()
    c.plot_eff_ang_narrow()

def plot_fig_3():
    plt.figure()
    c.plot_eff_freq_narrow_expt_model()

# this takes about 5 mins to run
def plot_fig_4():
    av_config1 = a.AodVisualisation(920e-9, is_wide=True, freq_bnds=(20,50))
    av_config1.plot_efficiency_xangle_freq(ac_power=1.5)

    av_config2 = a.AodVisualisation(920e-9, is_wide=False, freq_bnds=(20,70))
    av_config2.plot_efficiency_xangle_freq(ac_power=1.5)

    av_config3 = a.AodVisualisation(920e-9, is_wide=False, freq_bnds=(20,50))
    av_config3.plot_efficiency_xangle_freq_second_order_noise()

# this will take many hours to run
# only the model panels are generated
def plot_fig_5():
    pdr_list = [5, 2, 1, 0.5, 0, -0.5, -2, -5]
    for pdr in pdr_list:
        simulation = p.calc_fov_surf_data(1e9, pdr)
        description = 'Model for PDR %s' % pdr
        p.generate_plot(simulation, description, pdr_z=(pdr, 1e9))

# takes about an hour to run
# only the model panels are generated
def plot_fig_6():
    z_list = [-0.5, 1e9, 0.5] # aol coords
    for z in z_list:
        effs_norm = p.calc_fov_surf_data(z, 0.3)
        description = 'Model, PDR %s, z=%s' % (0.3, z)
        p.generate_plot(effs_norm, description)

# fig_7 is not generated by the model

if __name__ == '__main__':
    plot_fig_2()